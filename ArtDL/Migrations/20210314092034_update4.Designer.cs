// <auto-generated />
using System;
using ArtDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ArtDL.Migrations
{
    [DbContext(typeof(ArtDBContext))]
    [Migration("20210314092034_update4")]
    partial class update4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ArtModel.Art", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ArtistCommentary")
                        .HasColumnType("text");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("Fullart")
                        .HasColumnType("bytea");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("MaxSeries")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Arts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistCommentary = "",
                            ArtistId = 3,
                            CurrentValue = 0.00m,
                            Description = "digital art produced by transforming the waveform of ringing bells into an abstract painting",
                            Location = "US",
                            MaxSeries = 1,
                            Name = "The Exquisite Loss of Hearing",
                            Thumbnail = ""
                        },
                        new
                        {
                            Id = 2,
                            ArtistCommentary = "a phsyical representation of my bipolar disorder",
                            ArtistId = 4,
                            CurrentValue = 0.0m,
                            Description = "A child menaced by dark figures in the background, screams with laughter, a tear drops from her eye",
                            Location = "NZ",
                            MaxSeries = 1,
                            Name = "Scream, scream, cry",
                            Thumbnail = ""
                        },
                        new
                        {
                            Id = 3,
                            ArtistCommentary = "all art is crap",
                            ArtistId = 2,
                            CurrentValue = 0.0m,
                            Description = "a peice of poo on a stick",
                            Location = "US",
                            MaxSeries = 1000,
                            Name = "Dookey",
                            Thumbnail = ""
                        },
                        new
                        {
                            Id = 4,
                            ArtistCommentary = "shatter your conceptions",
                            ArtistId = 1,
                            CurrentValue = 0.0m,
                            Description = "A photo of broken glass",
                            Location = "US",
                            MaxSeries = 1,
                            Name = "Shatter",
                            Thumbnail = ""
                        },
                        new
                        {
                            Id = 5,
                            ArtistCommentary = "Bah",
                            ArtistId = 1,
                            CurrentValue = 0.0m,
                            Description = "The world swirls with silver tears among a beautiful goat farm",
                            Location = "IT",
                            MaxSeries = 1,
                            Name = "A field of Broken Skies",
                            Thumbnail = ""
                        },
                        new
                        {
                            Id = 6,
                            ArtistCommentary = "all the beats are made of stars",
                            ArtistId = 6,
                            CurrentValue = 0.0m,
                            Description = "random scribbles on a canvas",
                            Location = "UK",
                            MaxSeries = 1,
                            Name = "Scratchy Painting",
                            Thumbnail = ""
                        },
                        new
                        {
                            Id = 7,
                            ArtistCommentary = "Philosophical contemplation of the deep",
                            ArtistId = 4,
                            CurrentValue = 0.0m,
                            Description = "The Monster of the deep rises",
                            Location = "US",
                            MaxSeries = 1,
                            Name = "A large Lost Kraken"
                        },
                        new
                        {
                            Id = 8,
                            ArtistCommentary = "we fall into the process driven by maddness",
                            ArtistId = 1,
                            CurrentValue = 0.0m,
                            Description = "Abstracted ant farm",
                            Location = "US",
                            MaxSeries = 1,
                            Name = "Unfortunate Mayhem"
                        },
                        new
                        {
                            Id = 9,
                            ArtistCommentary = "there are no more tears left to spare",
                            ArtistId = 2,
                            CurrentValue = 0.0m,
                            Description = "A scrawl of broken lines fluttering in and out of existence",
                            Location = "UK",
                            MaxSeries = 1,
                            Name = "Dabble Doodle"
                        });
                });

            modelBuilder.Entity("ArtModel.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ArtistPhoto")
                        .HasColumnType("text");

                    b.Property<string>("ArtistStatement")
                        .HasColumnType("text");

                    b.Property<string>("Biography")
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistPhoto = "",
                            ArtistStatement = "Art is but an illusion",
                            Biography = "Trans artist located in seattle wa",
                            CountryCode = "",
                            Location = "US",
                            Name = "Madeline Williams",
                            Signature = "Madzy"
                        },
                        new
                        {
                            Id = 2,
                            ArtistPhoto = "",
                            ArtistStatement = "I spit on your art",
                            Biography = "found as a baby in a junkyard on the outskirts of arkansas, Cranky Pants formed their view of the world by making beauty from ugly surroundings.",
                            CountryCode = "",
                            Location = "US",
                            Name = "cranky pants johonson",
                            Signature = "Cranky Pants"
                        },
                        new
                        {
                            Id = 3,
                            ArtistPhoto = "",
                            ArtistStatement = "...",
                            Biography = "newborn artist googoo, smears her hand over canvas to produce expressive art peices",
                            CountryCode = "",
                            Location = "NZ",
                            Name = "googoo",
                            Signature = "Goo Goo"
                        },
                        new
                        {
                            Id = 4,
                            ArtistPhoto = "",
                            ArtistStatement = "We exist in the intersection between fields of reality and dreams, stare in awe the liminal space",
                            Biography = "Blue Heart has arted for 162 years, winner of the blue hearty grand prize 10 years in a row",
                            CountryCode = "",
                            Location = "US",
                            Name = "Blue Heart",
                            Signature = "Blue"
                        },
                        new
                        {
                            Id = 5,
                            ArtistPhoto = "",
                            ArtistStatement = "Simplicity is useful, complexity divine",
                            Biography = "I'm too modest to talk about my extraordinary life",
                            CountryCode = "",
                            Location = "UK",
                            Name = "ludwig popper",
                            Signature = "LP"
                        },
                        new
                        {
                            Id = 6,
                            ArtistPhoto = "",
                            ArtistStatement = "Art is for hanging on your walls and should by pastoral",
                            Biography = "Mama Moomin is the proud mother of 13 cats and lives on a farm raising goats, which she uses as inpiration for her art",
                            CountryCode = "",
                            Location = "IT",
                            Name = "Mama Moomin",
                            Signature = "MMoo"
                        });
                });

            modelBuilder.Entity("ArtModel.ArtistGallery", b =>
                {
                    b.Property<int>("ArtId")
                        .HasColumnType("integer");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.ToTable("ArtistGallery");
                });

            modelBuilder.Entity("ArtModel.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArtId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("MinimumBid")
                        .HasColumnType("numeric");

                    b.Property<int>("Notify")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("ArtModel.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("ArtId")
                        .HasColumnType("integer");

                    b.Property<int>("CollectorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeOfBid")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("ArtModel.BlackList", b =>
                {
                    b.Property<int>("ArtId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.ToTable("BlackList");
                });

            modelBuilder.Entity("ArtModel.Collector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Collectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "fleeyourmind@hotmail.com",
                            Location = "US",
                            Name = "BidBot"
                        });
                });

            modelBuilder.Entity("ArtModel.CollectorsGallery", b =>
                {
                    b.Property<int>("ArtId")
                        .HasColumnType("integer");

                    b.Property<int>("CollectorId")
                        .HasColumnType("integer");

                    b.ToTable("CollectorsGallery");
                });

            modelBuilder.Entity("ArtModel.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("ArtModel.SellerInventory", b =>
                {
                    b.Property<int>("ArtId")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.ToTable("SellerInventory");
                });
#pragma warning restore 612, 618
        }
    }
}
